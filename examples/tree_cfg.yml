datasources:
  petals:
    type: csv
    path: ./examples/iris_train.csv  # The string can also be a URL. Valid URL schemes include http, ftp, s3, and file.
    expires: 0  # -1: never (=cached forever), 0: immediately (=no caching), >0: time in seconds.
    options: {}
    tags: train
  petals_test:
    type: csv
    path: ./examples/iris_holdout.csv  # The string can also be a URL. Valid URL schemes include http, ftp, s3, and file.
    expires: 0  # -1: never (=cached forever), 0: immediately (=no caching), >0: time in seconds.
    options: {}
    tags: [train, test]

model_store:
  location: ./model_store  # TODO: maybe support sftp or other remote locations...

model:
  name: IrisModel
  version: '0.0.1'  # use semantic versioning (<breaking>.<adding>.<fix>)
  module: examples.tree_model  # same as file name without .py
  train_options: {}
  predict_options: {}

api:
  resource_name: varieties  # name of the service api, also what comes in the URL after the first /
  version: '0.0.1'  # use semantic versioning (breaking.adding.fix), first segment will be used in url as .../vX
  raml: examples/tree.raml
